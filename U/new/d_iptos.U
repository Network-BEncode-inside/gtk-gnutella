?RCS: $Id$
?RCS:
?RCS: @COPYRIGHT@
?RCS:
?MAKE:d_iptos: cat rm contains cppstdin cppflags cppminus \
	i_niin i_sysin i_niip test Setvar echo n c
?MAKE:	-pick add $@ %<
?S:d_iptos:
?S:	This variable conditionally defines the USE_IP_TOS symbol, which
?S:	indicates to the C program that the IP TOS services are available.
?S:.
?C:USE_IP_TOS:
?C:	This symbol, if defined, indicates that the IP TOS services are
?C:	available and can be used.  Be prepared to include <sys/socket.h>,
?C: either <netinet/in.h> or <sys/in.h>, and <netinet/ip.h> when
?C:	I_NETINET_IP is defined.
?C:.
?H:#$d_iptos USE_IP_TOS		/**/
?H:.
?F:!iptos !iptos.h
?T:inh
?LINT:set d_iptos
?LINT:usefile iptos.h
: check for IP TOS support
echo " "
$echo $n "Is IP TOS (Type of Service) support available? $c" >&4
case "$i_niin" in
"$define") inh=netinet/in.h;;
*)
	case "$i_sysin" in
	"$define") inh=sys/in.h;;
	esac
	;;
esac
$cat >iptos <<EOM
#include <sys/socket.h>
#include <$inh>
#if defined(IP_TOS) && defined(IPTOS_LOWDELAY) && defined(IPTOS_THROUGHPUT)
YES
#endif
EOM
$cppstdin $cppflags $cppminus <iptos >iptos.h
val="$undef"
if $contains 'YES' iptos.h >/dev/null 2>&1; then
	val="$define"
	echo "You have IP TOS support in <$inh>." >&4
elif $test "x$i_niip" = "x$define"; then
	$cat >iptos <<EOM
	#include <sys/socket.h>
	#include <$inh>
	#include <netinet/ip.h>
	#if defined(IP_TOS) && defined(IPTOS_LOWDELAY) && defined(IPTOS_THROUGHPUT)
	YES
	#endif
EOM
	$cppstdin $cppflags $cppminus <iptos >iptos.h
	if $contains 'YES' iptos.h >/dev/null 2>&1; then
		val="$define"
		echo "You have IP TOS support in <netinet/ip.h>." >&4
	else
		echo "Sorry, you seem to be lacking IP TOS support.". >&4
	fi
fi
set d_iptos
eval $setvar
$rm -f iptos iptos.h

