?RCS: $Id$
?RCS:
?RCS: @COPYRIGHT@
?RCS:
?MAKE:Largefile: Trylink cat ccflags i_unistd
?MAKE:	-pick add $@ %<
?T:flags result saved_ccflags
?W:%<:off_t
?LINT:change ccflags
: determine how to compile for large 64-bit file support
echo " "
echo "Checking whether we need flags for large file support..." >&4
flags='-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64'
$cat >try.c <<EOC
#include <sys/types.h>
#$i_unistd I_UNISTD
#ifdef I_UNISTD
#include <unistd.h>
#endif
int main(void)
{
	switch (0) { case 0: case (sizeof(off_t) >= 8): break; }
	return 0;
}
EOC

set result
eval $trylink

case "$result" in
"$define")
	echo "Selected C flags already provide 64-bit file support."
	;;
"$undef")
	echo "You're not natively compiling for large file, fixing..." >&4

	saved_ccflags=$ccflags
	ccflags="$ccflags $flags"

	set result
	eval $trylink

	case "$result" in
	"$define")
		echo "(Adding $flags)"
		;;
	"$undef")
		echo "(Could not compile the test program, using 32-bit files)" >&4
		ccflags=$saved_ccflags
		;;
	esac	
	;;
esac

