?RCS: $Id$
?RCS:
?RCS: @COPYRIGHT@
?RCS:
?MAKE:d_posix_fadvise: Myread Setvar cat rm +cc +ccflags +ldflags
?MAKE:	-pick add $@ %<
?S:d_posix_fadvise:
?S:	This variable conditionally defines the HAS_POSIX_FADVISE symbol, which
?S:	indicates to the C program that posix_fadvise() support is available.
?S:.
?C:HAS_POSIX_FADVISE:
?C:	This symbol is defined when posix_fadvise() can be used.
?C:.
?H:#$d_posix_fadvise HAS_POSIX_FADVISE
?H:.
?LINT: set d_posix_fadvise
: can we use posix_fadvise?
echo " "
echo "Checking whether posix_fadvise() is available ..." >&4
val="$define"
$cat >try.c <<'EOC'
#include <sys/types.h>
#include <fcntl.h>

int
main(void) {
  static int ret, fd;
  static off_t offset, size;
  static int hint;

  hint	= POSIX_FADV_NORMAL
	| POSIX_FADV_RANDOM
	| POSIX_FADV_SEQUENTIAL
	| POSIX_FADV_WILLNEED
	| POSIX_FADV_DONTNEED
	| POSIX_FADV_NOREUSE;

  ret |= posix_fadvise(fd, offset, size, hint);
  if (0 != ret)
	return 1;

  return 0;
}
EOC
if $cc $ccflags $ldflags -o try try.c >/dev/null 2>&1; then
    $cat <<'EOM'
It looks like posix_fadvise() is usable on your system, good.
EOM
else
	echo "Sorry, I will not be using posix_fadvise()."
	val="$undef"
fi
$rm -f try try.c
set d_posix_fadvise
eval $setvar

