?RCS: $Id$
?RCS:
?RCS: @COPYRIGHT@
?RCS:
?MAKE:d_ipv6: cc ccflags ldflags rm cat Myread
?MAKE:	-pick add $@ %<
?S:d_ipv6:
?S: This variable conditionally defines HAS_IPV6.
?S:.
?C:HAS_IPV6:
?C:  This symbol is defined when IPv6 can be used
?C:.
?H:#$d_ipv6 HAS_IPV6	/**/
?H:.
: determine whether IPv6 can be used
case "$d_ipv6" in
"$undef") ;;
*)
	echo " "
	echo "Checking whether IPv6 can be used ..." >&4
	$cat >try.c <<'EOC'
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#define STATIC_ASSERT(x)	\
	do { switch (0) { case ((x) ? 1 : 0): case 0: break; } } while(0)

int main(void)
{
	struct sockaddr_storage ss;
	struct sockaddr_in6 sin6;
	static struct in6_addr in6;

	ss.ss_family = PF_INET6;

	sin6.sin6_family = AF_INET6;
	sin6.sin6_port = 6346;
	sin6.sin6_flowinfo = 23UL;
	sin6.sin6_scope_id = 42UL;
	sin6.sin6_addr = in6;
	sin6.sin6_addr.s6_addr[0] = in6.s6_addr[0];

	STATIC_ASSERT(AF_INET6 == PF_INET6);
	STATIC_ASSERT(sizeof in6 == sizeof sin6.sin6_addr);
	STATIC_ASSERT(16 == sizeof sin6.sin6_addr.s6_addr);
	STATIC_ASSERT(2 == sizeof sin6.sin6_port);
	STATIC_ASSERT(4 == sizeof sin6.sin6_flowinfo);
	STATIC_ASSERT(4 == sizeof sin6.sin6_scope_id);

	(void) sin6;
	(void) in6;

	return 0;
}
EOC
	if $cc $ccflags $ldflags -o try try.c >/dev/null 2>&1; then
	$cat <<'EOM'
 It looks like IPv6 is usable on your system, good.

EOM
	  else
		echo "Sorry, I will not be using IPv6."
		d_ipv6="$undef"
	  fi
	  $rm -f try try.c
	  ;;
esac

