?RCS: $Id: d_posix_memalign.U 11624 2006-08-19 15:56:01Z cbiere $
?RCS:
?RCS: @COPYRIGHT@
?RCS:
?MAKE:d_posix_memalign: Myread Setvar cat rm +cc +ccflags +ldflags
?MAKE:	-pick add $@ %<
?S:d_posix_memalign:
?S:	This variable conditionally defines the HAS_POSIX_MEMALIGN symbol, which
?S:	indicates to the C program that posix_memalign() support is available.
?S:.
?C:HAS_POSIX_MEMALIGN:
?C:	This symbol is defined when posix_memalign() can be used.
?C:.
?H:#$d_posix_memalign HAS_POSIX_MEMALIGN
?H:.
?LINT: set d_posix_memalign
: can we use posix_memalign?
echo " "
echo "Checking whether posix_memalign() is available ..." >&4
val="$define"
$cat >try.c <<'EOC'
#include <stdlib.h>

int
main(void) {
  int ret = 0;
  void *p;

  ret |= posix_memalign(&p, sizeof(void *), 1);
  return 0;
}
EOC
if $cc $ccflags $ldflags -o try try.c >/dev/null 2>&1; then
    $cat <<'EOM'
It looks like posix_memalign() is usable on your system, good.
EOM
else
	echo "Sorry, I will not be using posix_memalign()."
	val="$undef"
fi
$rm -f try try.c
set d_posix_memalign
eval $setvar

