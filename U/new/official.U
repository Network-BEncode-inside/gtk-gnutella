?RCS: $Id$
?RCS:
?RCS: @COPYRIGHT@
?RCS:
?MAKE:official d_official: Myread Setvar cat pkgsrc package
?MAKE:	-pick add $@ %<
?S:official:
?S:	This variable holds 'true' or 'false' depending on whether we're making
?S:	an "official" build.  When not official, generated programs may choose
?S:	to peek within the source directory, for instance via $pkgsrc in the
?S:	shell and PACKAGE_SOURCE_DIR in C programs.
?S:.
?S:d_official:
?S:	This variable conditionally defines OFFICIAL_BUILD.
?S:.
?C:OFFICIAL_BUILD:
?C: When defined, the build is "official".  Programs generated for an
?C:	official build MUST NOT peek into the place where the sources lie, via
?C:	PACKAGE_SOURCE_DIR or any other means.
?C:.
?H:#$d_official OFFICIAL_BUILD	/**/
?H:.
?Y:TOP
?LINT:set d_official
: determine whether this is an official build

case "$official" in
false)
	official=false
	val="$undef"
	$cat >&4 <<EOM
*******************************************************************
************************ WARNING! *********************************
*******************************************************************

The resulting binary will access files in the current source
directory:

	$pkgsrc

This executable will not be suitable for distribution but only for
local use, if you want to skip the installation! Use

	-Dofficial=true

to compile a binary suitable for distributing $package.

*******************************************************************

EOM
;;
*)
	val="$define"
	official=true
	;;
esac

set d_official
eval $setvar

